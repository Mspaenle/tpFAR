/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _HTTP_H_RPCGEN
#define _HTTP_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define BUFFER_SIZE 1024

struct data1 {
	char request[BUFFER_SIZE];
};
typedef struct data1 data1;


struct data2 {
	int fd;
};
typedef struct data2 data2;


struct response {
	int fd;
	char char_read[BUFFER_SIZE];
	int byte_read_nbr;
};
typedef struct response response;


#define HTTP 0x20000001
#define VERSION_UN 1

#if defined(__STDC__) || defined(__cplusplus)
#define HTTP_NULL 0
extern  void * http_null_1(void *, CLIENT *);
extern  void * http_null_1_svc(void *, struct svc_req *);
#define HTTP_REQUEST1 1
extern  response * http_request1_1(data1 *, CLIENT *);
extern  response * http_request1_1_svc(data1 *, struct svc_req *);
#define HTTP_REQUEST2 2
extern  response * http_request2_1(data2 *, CLIENT *);
extern  response * http_request2_1_svc(data2 *, struct svc_req *);
extern int http_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define HTTP_NULL 0
extern  void * http_null_1();
extern  void * http_null_1_svc();
#define HTTP_REQUEST1 1
extern  response * http_request1_1();
extern  response * http_request1_1_svc();
#define HTTP_REQUEST2 2
extern  response * http_request2_1();
extern  response * http_request2_1_svc();
extern int http_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_data1 (XDR *, data1*);
extern  bool_t xdr_data1 (XDR *, data1*);
extern  bool_t xdr_data2 (XDR *, data2*);
extern  bool_t xdr_data2 (XDR *, data2*);
extern  bool_t xdr_response (XDR *, response*);
extern  bool_t xdr_response (XDR *, response*);

#else /* K&R C */
extern bool_t xdr_data1 ();
extern bool_t xdr_data1 ();
extern bool_t xdr_data2 ();
extern bool_t xdr_data2 ();
extern bool_t xdr_response ();
extern bool_t xdr_response ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_HTTP_H_RPCGEN */
